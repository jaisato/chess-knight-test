# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/ChessBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Chess\:
        resource: '../../src/ChessBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/ChessBundle/{Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    Chess\Infrastructure\UI\Web\Controller\:
        resource: '../../src/ChessBundle/Infrastructure/UI/Web/Controller'
        public: true
        tags: ['controller.service_arguments']

    chess.infrastructure.domain.event.knight.print_new_shortest_path_listener:
        class: Chess\Infrastructure\Domain\Event\Knight\PrintNewShortestPathFoundListener
        tags:
            - { name: kernel.event_listener, event: Chess\Domain\Event\Knight\NewShortestPathFound, method: handle }

    chess.application.knight.get_minimum_number_of_moves:
        class: Chess\Application\Knight\GetMinimumNumberOfMovesService
        arguments:
            - Chess\Infrastructure\Persistence\InMemory\Knight\InMemoryKnightRepository
            - Chess\Infrastructure\Persistence\InMemory\Board\InMemoryBoardRepository
            - event_dispatcher

    chess.infrastructure.ui.web.controller.knight_shortest_path:
        class: Chess\Infrastructure\UI\Web\Controller\KnightController
        arguments:
            - chess.application.knight.get_minimum_number_of_moves
            - templating
